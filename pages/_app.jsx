import "../styles/globals.css";
import Head from "next/head";
import { CacheProvider } from '@emotion/react';
import createEmotionCache from '../utils/createEmotion';
import { ThemeProvider } from "../utils/themeContext";
import PropTypes from 'prop-types';
import '@fontsource/roboto/300.css';
import '@fontsource/roboto/400.css';
import '@fontsource/roboto/500.css';
import '@fontsource/roboto/700.css';
import Sidebar from "../components/Sidebar";
import Navbar from "../components/Navbar";
import 'react-quill/dist/quill.snow.css'
import Rightbar from "../components/Rightbar";
import Protected from "../components/Protected";
function MyApp(props) {
  const clientSideEmotionCache = createEmotionCache();
  const { Component, emotionCache = clientSideEmotionCache, pageProps } = props;
  if (Component.noLayout) {
    return (
      <CacheProvider value={emotionCache}>
        <ThemeProvider>
          <Component {...pageProps} />
        </ThemeProvider>
      </CacheProvider>
    );
  }
  else if (Component.user) {
    return (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />

          <link rel="icon" href="/favicon.ico" />

        </Head>
        <CacheProvider value={emotionCache}>

          <ThemeProvider>
            <Protected>
              <div className='app'>
                <Sidebar />
                <main className="content" style={{
                  width: "100%",
                }}>
                  <Navbar />
                  <Component {...pageProps} />
                </main>

              </div>
            </Protected>
          </ThemeProvider>

        </CacheProvider>
      </>
    );

  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />

        <link rel="icon" href="/favicon.ico" />

      </Head>
      <CacheProvider value={emotionCache}>

        <ThemeProvider>
          <Protected>
            <div className='app'>
              <Sidebar />
              <main className="content" style={{
                width: "100%",
              }}>
                <Navbar />
                <Component {...pageProps} />
              </main>
              <Rightbar />
            </div>
          </Protected>
        </ThemeProvider>

      </CacheProvider>
    </>
  );
}
MyApp.propTypes = {
  Component: PropTypes.elementType.isRequired,
  emotionCache: PropTypes.object,
  pageProps: PropTypes.object.isRequired,
};

export default MyApp;
